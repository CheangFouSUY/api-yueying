# Generated by Django 4.0.3 on 2022-05-11 06:44

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('firstName', models.CharField(max_length=150)),
                ('lastName', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('about', models.TextField(default="A bio hasn't been added yet.", max_length=500, verbose_name='about')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('isDeleted', models.BooleanField(default=False)),
                ('profile', models.ImageField(blank=True, upload_to='uploads/')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('gender', models.CharField(choices=[('O', 'Prefer Not to Say'), ('M', 'Male'), ('F', 'Female')], default='O', max_length=10)),
                ('securityQuestion', models.IntegerField(choices=[(1, '您最喜欢的颜色是'), (2, '您最讨厌的食物'), (3, '您的最要好闺蜜/兄弟是'), (4, '您的爱好是'), (5, '您的初恋是')], default=0)),
                ('securityAnswer', models.CharField(default=0, max_length=500)),
                ('dob', models.DateField(default=datetime.date(2000, 1, 1))),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('isbn', models.CharField(blank=True, max_length=50)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=5000)),
                ('img', models.ImageField(blank=True, upload_to='uploads/books')),
                ('thumbnail', models.ImageField(blank=True, upload_to='uploads/books')),
                ('author', models.CharField(max_length=150)),
                ('publisher', models.CharField(max_length=150)),
                ('year', models.DateField(default=datetime.date(2000, 1, 1))),
                ('category', models.IntegerField(choices=[(0, '其他'), (1, '爱情'), (2, '恐怖'), (3, '悬疑'), (4, '科幻'), (5, '艺术'), (6, '体育'), (7, '烹饪'), (8, '漫画'), (9, '教育'), (10, '哲学'), (11, '文学')], default=0)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=5000)),
                ('img', models.ImageField(blank=True, upload_to='uploads/feeds')),
                ('isPublic', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('groupName', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=5000)),
                ('category', models.CharField(choices=[('b', 'Book'), ('m', 'Movie'), ('o', 'Other')], default='b', max_length=150)),
                ('isDeleted', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=5000)),
                ('img', models.ImageField(blank=True, upload_to='uploads/movies')),
                ('thumbnail', models.ImageField(blank=True, upload_to='uploads/movies')),
                ('director', models.CharField(max_length=150)),
                ('actor', models.CharField(max_length=150)),
                ('year', models.DateField(default=datetime.date(2000, 1, 1))),
                ('category', models.IntegerField(choices=[(0, '其他'), (1, '爱情'), (2, '恐怖'), (3, '悬疑'), (4, '冒险'), (5, '喜剧'), (6, '动作'), (7, '科幻'), (8, '综艺'), (9, '动漫'), (10, '卡通')], default=0)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=5000)),
                ('img', models.ImageField(blank=True, upload_to='uploads/feeds')),
                ('isDeleted', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.feed')),
            ],
        ),
        migrations.CreateModel(
            name='userReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(choices=[('O', 'Other'), ('L', 'Like'), ('D', 'Dislike')], default='O', max_length=10)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='userMovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(choices=[('O', 'Other'), ('L', 'Like'), ('D', 'Dislike')], default='O', max_length=10)),
                ('isSaved', models.BooleanField(default=False)),
                ('isRated', models.BooleanField(default=False)),
                ('rateScore', models.IntegerField(default=-1)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='userFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(choices=[('O', 'Other'), ('L', 'Like'), ('D', 'Dislike')], default='O', max_length=10)),
                ('isFollowed', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.feed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='userBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(choices=[('O', 'Other'), ('L', 'Like'), ('D', 'Dislike')], default='O', max_length=10)),
                ('isSaved', models.BooleanField(default=False)),
                ('isRated', models.BooleanField(default=False)),
                ('rateScore', models.IntegerField(default=-1)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=5000)),
                ('category', models.IntegerField(choices=[(1, '垃圾内容'), (2, '色情内容'), (3, '非法活动'), (4, '侵犯版权'), (5, '骚扰、欺凌和威胁'), (6, '仇恨言论'), (7, '暴力内容')], default=0)),
                ('result', models.BooleanField(default=False)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reportFeed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.feed')),
                ('reportReview', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.review')),
            ],
        ),
        migrations.CreateModel(
            name='groupFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isPin', models.BooleanField(default=False)),
                ('isFeatured', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('feed', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.feed')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.group')),
            ],
        ),
        migrations.CreateModel(
            name='groupAdminApply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('result', models.IntegerField(choices=[(0, 'Pending'), (1, 'Accept'), (2, 'Decline')], default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=5000)),
                ('category', models.IntegerField(choices=[(1, 'BUG反馈'), (2, '网站反馈'), (3, '其它')], default=0)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='feed',
            name='belongTo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.group'),
        ),
        migrations.AddField(
            model_name='feed',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='userGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAdmin', models.BooleanField(default=False)),
                ('isBanned', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('banDue', models.DateTimeField(blank=True, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('group', 'user')},
            },
        ),
    ]
